[{"E:\\桌面应用\\demo\\react\\notebook\\src\\App.js":"1","E:\\桌面应用\\demo\\react\\notebook\\src\\reportWebVitals.js":"2","E:\\桌面应用\\demo\\react\\notebook\\src\\components\\FileSearch.js":"3","E:\\桌面应用\\demo\\react\\notebook\\src\\index.js":"4","E:\\桌面应用\\demo\\react\\notebook\\src\\utils\\defaultFiles.js":"5","E:\\桌面应用\\demo\\react\\notebook\\src\\components\\FileList.js":"6","E:\\桌面应用\\demo\\react\\notebook\\src\\hooks\\useKeyPress.js":"7","E:\\桌面应用\\demo\\react\\notebook\\src\\components\\BottomBtn.js":"8","E:\\桌面应用\\demo\\react\\notebook\\src\\components\\TabList.js":"9","E:\\桌面应用\\demo\\react\\notebook\\src\\utils\\Helper.js":"10","E:\\桌面应用\\demo\\react\\notebook\\src\\utils\\FileHelper.js":"11","E:\\桌面应用\\demo\\react\\notebook\\src\\hooks\\useContextMenu.js":"12"},{"size":12495,"mtime":1610555159457,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607590342266,"results":"15","hashOfConfig":"14"},{"size":2953,"mtime":1610555219366,"results":"16","hashOfConfig":"14"},{"size":500,"mtime":1607590342266,"results":"17","hashOfConfig":"14"},{"size":446,"mtime":1609333954240,"results":"18","hashOfConfig":"14"},{"size":7228,"mtime":1609682760660,"results":"19","hashOfConfig":"14"},{"size":995,"mtime":1609338230872,"results":"20","hashOfConfig":"14"},{"size":694,"mtime":1609141213813,"results":"21","hashOfConfig":"14"},{"size":2556,"mtime":1609685534054,"results":"22","hashOfConfig":"14"},{"size":554,"mtime":1609595505551,"results":"23","hashOfConfig":"14"},{"size":1112,"mtime":1609581627129,"results":"24","hashOfConfig":"14"},{"size":1017,"mtime":1610547568825,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"x6gxv5",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\桌面应用\\demo\\react\\notebook\\src\\App.js",["55"],"E:\\桌面应用\\demo\\react\\notebook\\src\\reportWebVitals.js",[],"E:\\桌面应用\\demo\\react\\notebook\\src\\components\\FileSearch.js",["56","57","58"],"E:\\桌面应用\\demo\\react\\notebook\\src\\index.js",[],["59","60"],"E:\\桌面应用\\demo\\react\\notebook\\src\\utils\\defaultFiles.js",[],["61","62"],"E:\\桌面应用\\demo\\react\\notebook\\src\\components\\FileList.js",["63","64","65","66"],"import React, { useState, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faTimes,\r\n    faSave\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { faMarkdown } from '@fortawesome/free-brands-svg-icons'\r\nimport useKeyPress from './../hooks/useKeyPress.js'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport useContextMenu from './../hooks/useContextMenu.js'\r\nimport {\r\n    getParentNode\r\n} from \"./../utils/Helper.js\";\r\nconst FileList = ({\r\n        files,\r\n        openedFileIds,\r\n        onFileClickFunc,\r\n        onFileDeleteFunc,\r\n        onFileRemoveFunc,\r\n        onFileNameSaveEdit,\r\n        onFileNameEditStart\r\n    }) => {\r\n    const [editStatic, setEditStatic] = useState(false)\r\n    const [value, setValue] = useState('')\r\n    const enterPressed = useKeyPress(13)\r\n\r\n    const closeChangeName = ()=>{\r\n        setEditStatic(false)\r\n        setValue('')\r\n    }\r\n    const ifCanChangeFileName = () => {\r\n        if (files.find(file => file.id !== editStatic && file.title === value)) return alert('当前文件列表中已存在同名文件！')\r\n        onFileNameSaveEdit(editStatic, 'title', value)\r\n        closeChangeName()\r\n    }\r\n    const setChangeEdit = (id, title) => {\r\n        if (!editStatic) {\r\n            setEditStatic(id)\r\n            setValue(title)\r\n        } else {\r\n            alert('已有文件名编辑中，请关闭后再试')\r\n        }\r\n    }\r\n    const clickNode = useContextMenu([\r\n        {\r\n            label: '打开',\r\n            click: () => {\r\n                const target = getParentNode(clickNode.current, 'file-item')\r\n                if (!target) return\r\n                const id = target.dataset.id\r\n                onFileClickFunc(id)\r\n            }\r\n        },\r\n        {\r\n            label: '从文件资源管理器中删除',\r\n            click: () => {\r\n                const target = getParentNode(clickNode.current, 'file-item')\r\n                if (!target) return\r\n                const id = target.dataset.id\r\n                onFileDeleteFunc(id)\r\n            }\r\n        },\r\n        {\r\n            label: '从Markdown文件列表中移除',\r\n            click: () => {\r\n                const target = getParentNode(clickNode.current, 'file-item')\r\n                if (!target) return\r\n                const id = target.dataset.id\r\n                onFileRemoveFunc(id)\r\n            }\r\n        },\r\n        {\r\n            label: '重命名',\r\n            click: () => {\r\n                const target = getParentNode(clickNode.current, 'file-item')\r\n                if (!target) return\r\n                const id = target.dataset.id\r\n                const title = target.dataset.title\r\n                setChangeEdit(id, title)\r\n            }\r\n        }\r\n    ], '.file-list')\r\n    // console.log('clickNode', clickNode);\r\n\r\n    useEffect(() => {\r\n        if (enterPressed && editStatic && value) {\r\n            ifCanChangeFileName()\r\n        }\r\n    }, [enterPressed])\r\n\r\n    //进入文件名编辑时，需要通知上一级\r\n    useEffect(() => {\r\n        onFileNameEditStart(editStatic)\r\n    }, [editStatic])\r\n\r\n    useEffect(()=>{\r\n        const file = files.find(file=>file.isNew)\r\n        if(file) {\r\n            setEditStatic(file.id)\r\n            setValue(file.title)\r\n        }\r\n    }, [JSON.stringify(files)])\r\n    \r\n        return (\r\n            <ul className=\"list-group list-group-flush file-list\">\r\n                {\r\n                    files.map(file => (\r\n                        <li\r\n                            className=\"list-group-item d-flex align-item-center file-item\"\r\n                            key={file.id}\r\n                            data-id={file.id}\r\n                            data-title={file.title}\r\n                        >\r\n                            {\r\n                                (file.id !== editStatic && !file.isNew) &&\r\n                                <>\r\n                                    <span className=\"col-1\">\r\n                                        <FontAwesomeIcon\r\n                                            title=\"\"\r\n                                            icon={faMarkdown}\r\n                                            size=\"1x\"\r\n                                        />\r\n                                    </span>\r\n                                    <span\r\n                                        className=\"col file-name\"\r\n                                        onClick={() => { onFileClickFunc(file.id) }}\r\n                                        title={file.title}\r\n                                    >\r\n                                        {file.title}\r\n                                    </span>\r\n                                </>\r\n                            }\r\n                            {\r\n                                (file.id === editStatic || file.isNew) &&\r\n                                <>\r\n                                    <input\r\n                                        className=\"form-control input-sm search-input col\"\r\n                                        value={value}\r\n                                        placeholder=\"请输入文件名\"\r\n                                        onChange={(e) => { setValue(e.target.value.trim()) }}></input>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"icon-button col-1\"\r\n                                        onClick={(e) => { if(file.title) closeChangeName(e) }}\r\n                                    >\r\n                                        <FontAwesomeIcon\r\n                                            title=\"关闭\"\r\n                                            icon={faTimes}\r\n                                            size=\"lg\"\r\n                                        />\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"icon-button col-1\"\r\n                                        onClick = {\r\n                                            () => {\r\n                                                if (value) {\r\n                                                    ifCanChangeFileName()\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    >\r\n                                        <FontAwesomeIcon\r\n                                            title=\"保存\"\r\n                                            icon={faSave}\r\n                                            size=\"lg\"\r\n                                        />\r\n                                    </button>\r\n                                </>\r\n                            }\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        )\r\n}\r\nFileList.propTypes = {\r\n    files: PropTypes.array,\r\n    onFileClickFunc: PropTypes.func,\r\n    onFileDeleteFunc: PropTypes.func,\r\n    onFileRemoveFunc: PropTypes.func,\r\n    onFileNameSaveEdit: PropTypes.func\r\n}\r\nexport default FileList","E:\\桌面应用\\demo\\react\\notebook\\src\\hooks\\useKeyPress.js",["67"],"import { useState, useEffect } from 'react';\r\n// 监听某键盘按键是否被按下,true:down,false:up,返回true or false\r\nconst useKeyPress = (targetKeyCode) => {\r\n    const [keyPressed, setKeyPressed] = useState(false)\r\n    // 按下是true,弹起是false\r\n    const keyDownHandler = ({keyCode}) => {\r\n        if (keyCode === targetKeyCode) setKeyPressed(true)\r\n    }\r\n    const keyUpHandler = ({\r\n        keyCode\r\n    }) => {\r\n        if (keyCode === targetKeyCode) setKeyPressed(false)\r\n    }\r\n    useEffect(() => {\r\n        // 加载时添加监听\r\n        document.addEventListener('keydown', keyDownHandler)\r\n        document.addEventListener('keyup', keyUpHandler)\r\n\r\n        // 卸载时清除监听\r\n        return(\r\n            () => {\r\n                document.removeEventListener('keydown', keyDownHandler)\r\n                document.removeEventListener('keyup', keyUpHandler)\r\n            }\r\n        )\r\n    }, []) //[]加载\r\n    return keyPressed\r\n}\r\nexport default useKeyPress","E:\\桌面应用\\demo\\react\\notebook\\src\\components\\BottomBtn.js",[],"E:\\桌面应用\\demo\\react\\notebook\\src\\components\\TabList.js",["68","69"],"import {\r\n    FontAwesomeIcon\r\n} from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faTimes\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst TabList = ({\r\n        files,\r\n        activeId,\r\n        unSavedIds,\r\n        onTabClick,\r\n        onTabClose\r\n    }) => {\r\n    return (\r\n        <ul className=\"nav nav-pills\">\r\n            {\r\n                files.map(file => {\r\n                    // console.log('file:',file);\r\n                    if (!file) return\r\n                    const unSave = unSavedIds && unSavedIds.indexOf(file.id) > -1;\r\n                    const fclassNames = classNames({\r\n                        'nav-link': true,\r\n                        'active': file.id === activeId,\r\n                        'unsave': unSave\r\n                    })\r\n                    return (\r\n                        <li className=\"nav-item tab-btn\" key={file.id}>\r\n                            <a \r\n                                href=\"#\"\r\n                                className={fclassNames}\r\n                                onClick={(e)=> {\r\n                                    e.preventDefault();\r\n                                    onTabClick(file.id);\r\n                                }}\r\n                            >\r\n                                {file.title || '[文件名]'}\r\n                                <span className=\"mx-1 tab-btn-close\">\r\n                                    <FontAwesomeIcon\r\n                                        title=\"关闭\"\r\n                                        icon={faTimes}\r\n                                        onClick={(e)=>{\r\n                                            e.stopPropagation()\r\n                                            onTabClose(file.id)\r\n                                        }}\r\n                                    />\r\n                                </span>\r\n                                {\r\n                                    unSave &&\r\n                                    <span className=\"mx-1 unsave-dot\"></span>\r\n                                }\r\n                            </a>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </ul>\r\n    )\r\n}\r\nTabList.propTypes ={\r\n    files: PropTypes.array,\r\n    activeId: PropTypes.string,\r\n    unSavedIds: PropTypes.array,\r\n    onTabClick: PropTypes.func,\r\n    onTabClose: PropTypes.func\r\n}\r\nTabList.defaultProps = {\r\n    files: [],\r\n    unSavedIds: []\r\n}\r\nexport default TabList","E:\\桌面应用\\demo\\react\\notebook\\src\\utils\\Helper.js",[],"E:\\桌面应用\\demo\\react\\notebook\\src\\utils\\FileHelper.js",[],"E:\\桌面应用\\demo\\react\\notebook\\src\\hooks\\useContextMenu.js",[],{"ruleId":"70","severity":1,"message":"71","line":10,"column":17,"nodeType":"72","messageId":"73","endLine":10,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":19,"column":8,"nodeType":"76","endLine":19,"endColumn":21,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":33,"column":8,"nodeType":"76","endLine":33,"endColumn":22,"suggestions":"79"},{"ruleId":"74","severity":1,"message":"80","line":36,"column":8,"nodeType":"76","endLine":36,"endColumn":20,"suggestions":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"74","severity":1,"message":"88","line":90,"column":8,"nodeType":"76","endLine":90,"endColumn":22,"suggestions":"89"},{"ruleId":"74","severity":1,"message":"90","line":95,"column":8,"nodeType":"76","endLine":95,"endColumn":20,"suggestions":"91"},{"ruleId":"74","severity":1,"message":"92","line":103,"column":8,"nodeType":"76","endLine":103,"endColumn":31,"suggestions":"93"},{"ruleId":"74","severity":1,"message":"94","line":103,"column":9,"nodeType":"95","endLine":103,"endColumn":30},{"ruleId":"74","severity":1,"message":"96","line":26,"column":8,"nodeType":"76","endLine":26,"endColumn":10,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":23,"column":32,"nodeType":"100","messageId":"101","endLine":23,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":32,"column":29,"nodeType":"104","endLine":39,"endColumn":30},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchStateChange'. Either include it or remove the dependency array. If 'searchStateChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["105"],"React Hook useEffect has missing dependencies: 'inputActive', 'onFileSearch', and 'value'. Either include them or remove the dependency array. If 'onFileSearch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["106"],"React Hook useEffect has missing dependencies: 'closeSearch' and 'inputActive'. Either include them or remove the dependency array.",["107"],"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"React Hook useEffect has missing dependencies: 'editStatic', 'ifCanChangeFileName', and 'value'. Either include them or remove the dependency array.",["110"],"React Hook useEffect has a missing dependency: 'onFileNameEditStart'. Either include it or remove the dependency array. If 'onFileNameEditStart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["111"],"React Hook useEffect has a missing dependency: 'files'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has missing dependencies: 'keyDownHandler' and 'keyUpHandler'. Either include them or remove the dependency array.",["113"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [inputActive, searchStateChange]",{"range":"128","text":"129"},"Update the dependencies array to be: [enterPressed, inputActive, onFileSearch, value]",{"range":"130","text":"131"},"Update the dependencies array to be: [closeSearch, escPressed, inputActive]",{"range":"132","text":"133"},"Update the dependencies array to be: [editStatic, enterPressed, ifCanChangeFileName, value]",{"range":"134","text":"135"},"Update the dependencies array to be: [editStatic, onFileNameEditStart]",{"range":"136","text":"137"},"Update the dependencies array to be: [files]",{"range":"138","text":"139"},"Update the dependencies array to be: [keyDownHandler, keyUpHandler]",{"range":"140","text":"141"},[775,788],"[inputActive, searchStateChange]",[1138,1152],"[enterPressed, inputActive, onFileSearch, value]",[1239,1251],"[closeSearch, escPressed, inputActive]",[2854,2868],"[editStatic, enterPressed, ifCanChangeFileName, value]",[2968,2980],"[editStatic, onFileNameEditStart]",[3165,3188],"[files]",[859,861],"[keyDownHandler, keyUpHandler]"]